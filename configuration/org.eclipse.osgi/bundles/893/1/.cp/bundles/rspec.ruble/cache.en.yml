--- !!com.aptana.scripting.model.BundleElement 
author: Christopher Williams
children: 
- !!com.aptana.scripting.model.MenuElement 
  children: 
  - !!com.aptana.scripting.model.MenuElement 
    commandName: before
    displayName: before
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: after
    displayName: after
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "-"
    displayName: "-"
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Run Single Example"
    displayName: "Run Single Example"
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Run Examples"
    displayName: "Run Examples"
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Run Examples in selected files/directories"
    displayName: "Run Examples in selected files/directories"
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "-"
    displayName: "-"
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    children: 
    - !!com.aptana.scripting.model.MenuElement 
      children: 
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should be
        displayName: should be
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_not be
        displayName: should_not be
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should equal
        displayName: should equal
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_not equal
        displayName: should_not equal
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should satisfy
        displayName: should satisfy
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_not satisfy
        displayName: should_not satisfy
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should be_close
        displayName: should be_close
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_not be_close
        displayName: should_not be_close
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should match
        displayName: should match
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_not match
        displayName: should_not match
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should predicate
        displayName: should predicate
        path: (eval)
      displayName: "General"
      path: (eval)
    - !!com.aptana.scripting.model.MenuElement 
      children: 
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should be_instance_of
        displayName: should be_instance_of
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_not be_instance_of
        displayName: should_not be_instance_of
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should be_kind_of
        displayName: should be_kind_of
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_not be_kind_of
        displayName: should_not be_kind_of
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should respond_to
        displayName: should respond_to
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_not respond_to
        displayName: should_not respond_to
        path: (eval)
      displayName: "Class/Type"
      path: (eval)
    - !!com.aptana.scripting.model.MenuElement 
      children: 
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should raise_error
        displayName: should raise_error
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_not raise_error
        displayName: should_not raise_error
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should throw
        displayName: should throw
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_not throw
        displayName: should_not throw
        path: (eval)
      displayName: "Procs"
      path: (eval)
    - !!com.aptana.scripting.model.MenuElement 
      children: 
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should have
        displayName: should have
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should have_at_least
        displayName: should have_at_least
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should have_at_most
        displayName: should have_at_most
        path: (eval)
      displayName: "Collections"
      path: (eval)
    displayName: "Expectations"
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    children: 
    - !!com.aptana.scripting.model.MenuElement 
      commandName: mock
      displayName: mock
      path: (eval)
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "-"
      displayName: "-"
      path: (eval)
    - !!com.aptana.scripting.model.MenuElement 
      children: 
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_receive
        displayName: should_receive
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_not_receive
        displayName: should_not_receive
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: with args
        displayName: with args
        path: (eval)
      displayName: "Expectations"
      path: (eval)
    - !!com.aptana.scripting.model.MenuElement 
      children: 
      - !!com.aptana.scripting.model.MenuElement 
        commandName: once
        displayName: once
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: twice
        displayName: twice
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: exactly
        displayName: exactly
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: at_least
        displayName: at_least
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: at_most
        displayName: at_most
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: any_number_of_times
        displayName: any_number_of_times
        path: (eval)
      displayName: "Receive Counts"
      path: (eval)
    - !!com.aptana.scripting.model.MenuElement 
      children: 
      - !!com.aptana.scripting.model.MenuElement 
        commandName: and_return with args
        displayName: and_return with args
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: and_return with block
        displayName: and_return with block
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: and_raise
        displayName: and_raise
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: and_throw
        displayName: and_throw
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: and_yield
        displayName: and_yield
        path: (eval)
      displayName: "Responses"
      path: (eval)
    displayName: "Mocks"
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "-"
    displayName: "-"
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    children: 
    - !!com.aptana.scripting.model.MenuElement 
      commandName: Require spec_helper
      displayName: Require spec_helper
      path: (eval)
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "-"
      displayName: "-"
      path: (eval)
    - !!com.aptana.scripting.model.MenuElement 
      commandName: controller_name
      displayName: controller_name
      path: (eval)
    - !!com.aptana.scripting.model.MenuElement 
      commandName: describe (Controller)
      displayName: describe (Controller)
      path: (eval)
    - !!com.aptana.scripting.model.MenuElement 
      commandName: describe (RESTful Controller)
      displayName: describe (RESTful Controller)
      path: (eval)
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "-"
      displayName: "-"
      path: (eval)
    - !!com.aptana.scripting.model.MenuElement 
      children: 
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should have_records
        displayName: should have_records
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should be_success
        displayName: should be_success
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_not be_success
        displayName: should_not be_success
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should be_redirect
        displayName: should be_redirect
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should_not be_redirect
        displayName: should_not be_redirect
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should redirect_to
        displayName: should redirect_to
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: "-"
        displayName: "-"
        path: (eval)
      - !!com.aptana.scripting.model.MenuElement 
        commandName: should render_template
        displayName: should render_template
        path: (eval)
      displayName: "Expectations"
      path: (eval)
    displayName: "Rails Integration"
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: configure
    displayName: configure
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: describe (String)
    displayName: describe (String)
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: describe (type)
    displayName: describe (type)
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: describe (type, string)
    displayName: describe (type, string)
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: context
    displayName: context
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: it (does something)
    displayName: it (does something)
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: it (should do something)
    displayName: it (should do something)
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: Matcher (DSL)
    displayName: Matcher (DSL)
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: Matcher (Custom)
    displayName: Matcher (Custom)
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: mock_with
    displayName: mock_with
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: should ==
    displayName: should ==
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: should_not ==
    displayName: should_not ==
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: should eql
    displayName: should eql
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: should_not eql
    displayName: should_not eql
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: should =~
    displayName: should =~
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: should_not predicate
    displayName: should_not predicate
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: mock_model
    displayName: mock_model
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: stub
    displayName: stub
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Save Example file and remember"
    displayName: "Save Example file and remember"
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Run Last Examples file"
    displayName: "Run Last Examples file"
    path: (eval)
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Alternate File"
    displayName: "Alternate File"
    path: (eval)
  displayName: "RSpec"
  path: (eval)
- !command 
  async: false
  displayName: "Run Last Examples file"
  input: 
  - none
  - document
  keyBindingMap: 
    ? !!com.aptana.scripting.model.Platform ALL
    : 
      - OPTION+COMMAND+R

  outputType: show_as_html
  path: (eval)
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  customProperties: 
    prefix_values: 
    - :execution_listener
    - org.eclipse.ui.file.save
  displayName: "Save Example file and remember"
  input: 
  - none
  outputType: none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Run Single Example"
  input: 
  - selection
  - line
  keyBindingMap: 
    ? !!com.aptana.scripting.model.Platform ALL
    : 
      - M1+M2+R

  outputType: show_as_html
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Run Examples"
  input: 
  - document
  - document
  keyBindingMap: 
    ? !!com.aptana.scripting.model.Platform ALL
    : 
      - M1+R

  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Run Examples in selected files/directories"
  input: 
  - none
  keyBindingMap: 
    ? !!com.aptana.scripting.model.Platform ALL
    : 
      - OPTION+COMMAND+R

  outputType: show_as_html
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Alternate File"
  input: 
  - none
  keyBindingMap: 
    ? !!com.aptana.scripting.model.Platform ALL
    : 
      - CONTROL+M2+ARROW_DOWN

  outputType: show_as_tooltip
  path: (eval)
  runType: current_thread
  scope: source.ruby, text.html.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - anr
  displayName: and_raise
  expansion: and_raise(${1:exception})
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - anrb
  displayName: and_return with block
  expansion: and_return { $1 }
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - andra
  displayName: and_return with args
  expansion: and_return(${1:value})
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - ant
  displayName: and_throw
  expansion: and_throw(${1:sym})
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - any
  displayName: and_yield
  expansion: and_yield(${1:values})
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - annot
  displayName: any_number_of_times
  expansion: any_number_of_times
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - atl
  displayName: at_least
  expansion: at_least(${1:n}).times
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - atm
  displayName: at_most
  expansion: at_most(${1:n}).times
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - cnf
  displayName: configure
  expansion: |-
    Spec::Runner.configure do |config|
      config.$0
    end
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - con
  displayName: context
  expansion: |-
    context "${1:context}" do
      $0
    end
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - desc
  displayName: describe (Controller)
  expansion: |-
    require File.expand_path(File.dirname(__FILE__) + '/../spec_helper')
    
    describe ${1:controller} do
      $0
    end
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - desrc
  displayName: describe (RESTful Controller)
  expansion: |-
    describe ${1:controller}, "${2:GET|POST|PUT|DELETE} ${3:/some/path}${4: with some parameters}" do
      $0
    end
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - des
  displayName: describe (String)
  expansion: |-
    describe "${1:subject}" do
      $0
    end
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - dest
  displayName: describe (type)
  expansion: |-
    describe ${1:Type} do
      $0
    end
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - dests
  displayName: describe (type, string)
  expansion: |-
    describe ${1:Type}, "${2:description}" do
      $0
    end
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - ex
  displayName: exactly
  expansion: exactly(${1:n}).times
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - its
  displayName: it (should do something)
  expansion: |-
    it "should ${1:do something}"${2: do
      $0
    end}
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - it
  displayName: it (does something)
  expansion: |-
    it "${1:does something}"${2: do
      $0
    end}
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - matc
  displayName: Matcher (Custom)
  expansion: |-
    class ${1:ReverseTo}
      def initialize($3)
        @$3 = $3
      end
    
      def matches?(actual)
        @actual = actual
        # Satisfy expectation here. Return false or raise an error if it's not met.
        ${0:@actual.reverse.should == @$3}
        true
      end
    
      def failure_message_for_should
        "expected #{@actual.inspect} to $2 #{@$3.inspect}, but it didn't"
      end
    
      def failure_message_for_should_not
        "expected #{@actual.inspect} not to $2 #{@$3.inspect}, but it did"
      end
    end
    
    def ${2:reverse_to}(${3:expected})
      $1.new($3)
    end
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - mat
  displayName: Matcher (DSL)
  expansion: |
    Spec::Matchers.define :${1:name} do |${2:expected}|
      match do |${3:actual}|
        $3.$1?($2)
      end
    end

  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - moc
  displayName: mock
  expansion: |-
    ${1:var} = mock("${2:mock_name}"${3:, :null_object => true})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - mm
  displayName: mock_model
  expansion: mock_model(${1:model})$0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - mocw
  displayName: mock_with
  expansion: |-
    Spec::Runner.configure do |config|
    	config.mock_with :${0:mocha|flexmock|rr}
    end
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - "on"
  displayName: once
  expansion: once
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - reqs
  displayName: Require spec_helper
  expansion: |+
    require 'spec_helper'
    
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shbs
  displayName: should be_success
  expansion: |-
    response.should be_success
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shnbs
  displayName: should_not be_success
  expansion: |-
    response.should_not be_success
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - conn
  displayName: controller_name
  expansion: controller_name :${1:controller}
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - bef
  displayName: before
  expansion: |-
    before(${1::each}) do
      $0
    end
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - sh=
  displayName: should ==
  expansion: |-
    ${1:target}.should == ${2:value}
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shm
  displayName: should =~
  expansion: |-
    ${1:target}.should =~ /${2:regexp}/
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - she
  displayName: should eql
  expansion: |-
    ${1:target}.should eql(${2:value})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shb
  displayName: should be
  expansion: |-
    ${1:target}.should be(${2:result})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shbko
  displayName: should be_kind_of
  expansion: |-
    ${1:target}.should be_a_kind_of(${2:klass})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shbio
  displayName: should be_instance_of
  expansion: |-
    ${1:target}.should be_instance_of(${2:klass})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shbc
  displayName: should be_close
  expansion: |-
    ${1:target}.should be_close(${2:result}, ${3:tolerance})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shbr
  displayName: should be_redirect
  expansion: |-
    response.should be_redirect
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - she
  displayName: should equal
  expansion: |-
    ${1:target}.should equal(${2:value})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shh
  displayName: should have
  expansion: |-
    ${1:target}.should have(${2:num}).${3:things}
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shhal
  displayName: should have_at_least
  expansion: |-
    ${1:target}.should have_at_least(${2:num}).${3:things}
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shham
  displayName: should have_at_most
  expansion: |-
    ${1:target}.should have_at_most(${2:num}).${3:things}
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shhr
  displayName: should have_records
  expansion: |-
    ${1:target}.should have(${2:x}).records
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shm
  displayName: should match
  expansion: |-
    ${1:target}.should match(/${2:regexp}/)
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shn=
  displayName: should_not ==
  expansion: |-
    ${1:target}.should_not == ${2:value}
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shnm
  displayName: should_not =~
  expansion: |-
    ${1:target}.should_not =~ /${2:regexp}/
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shne
  displayName: should_not eql
  expansion: |-
    ${1:target}.should_not eql(${2:value})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shnb
  displayName: should_not be
  expansion: |-
    ${1:target}.should_not be(${2:result})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shkof
  displayName: should_not be_kind_of
  expansion: |-
    ${1:target}.should_not be_a_kind_of(${2:klass})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shbio
  displayName: should_not be_instance_of
  expansion: |-
    ${1:target}.should_not be_instance_of(${2:klass})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shnbc
  displayName: should_not be_close
  expansion: |-
    ${1:target}.should_not be_close(${2:result}, ${3:tolerance})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shnbr
  displayName: should_not be_redirect
  expansion: |-
    response.should_not be_redirect
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shne
  displayName: should_not equal
  expansion: |-
    ${1:target}.should_not equal(${2:value})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shnm
  displayName: should_not match
  expansion: |-
    ${1:target}.should_not match(/${2:regexp}/)
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shnp
  displayName: should_not predicate
  expansion: |-
    ${1:target}.should_not ${2:be_${3:predicate}} $4
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shnre
  displayName: should_not raise_error
  expansion: |-
    lambda { $1 }.should_not raise_error(${2:error})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shnr
  displayName: should_not_receive
  expansion: |
    ${1:mock}.should_not_receive(:${2:message})$3
    $0

  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shnrt
  displayName: should_not respond_to
  expansion: |-
    ${1:target}.should_not respond_to(:${2:sym})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shns
  displayName: should_not satisfy
  expansion: |-
    ${1:target}.should_not satisfy { |obj| $2 }
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shnt
  displayName: should_not throw
  expansion: |-
    lambda { $1 }.should_not throw_symbol(:${2:symbol})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shp
  displayName: should predicate
  expansion: |-
    ${1:target}.should ${2:be_${3:predicate}} $4
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shre
  displayName: should raise_error
  expansion: |-
    lambda { $1 }.should raise_error(${2:error})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shr
  displayName: should_receive
  expansion: ${1:mock}.should_receive(:${2:message})$3
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - wia
  displayName: with args
  expansion: with(${1})$2
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shrt
  displayName: should redirect_to
  expansion: |-
    response.should redirect_to(${1:url})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shrt
  displayName: should render_template
  expansion: |-
    response.should render_template(:${1:template})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shrt
  displayName: should respond_to
  expansion: |-
    ${1:target}.should respond_to(:${2:sym})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - shs
  displayName: should satisfy
  expansion: |-
    ${1:target}.should satisfy { |obj| $2 }
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - sht
  displayName: should throw
  expansion: |-
    lambda { $1 }.should throw_symbol(:${2:symbol})
    $0
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - stu
  displayName: stub
  expansion: ${1:double}.stub(:${2:message})$3
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - aft
  displayName: after
  expansion: |-
    after(${1::each}) do
      $0
    end
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - tw
  displayName: twice
  expansion: twice
  input: 
  - none
  path: (eval)
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
copyright: Copyright 2010 Aptana Inc. Distributed under the MIT license.
customProperties: 
  fileTypes: 
  - "*spec.rb"
  fileTypeRegistry: 
    "*spec.rb": source.ruby.rspec
description: Ported from David Chelimsky's RSpec bundle for TextMate.
displayName: "RSpec"
path: (eval)
repository: git://github.com/aptana/rspec.ruble.git
visible: true
